{"version":3,"file":"static/js/67.b321f7b4.chunk.js","mappings":"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","sources":["components/Cast/CastMember/CastMember.styled.jsx","components/Cast/CastMember/CastMember.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/MovieInfo/BackLink/BackLink.styled.jsx","components/MovieInfo/BackLink/BackLink.jsx"],"sourcesContent":["import { BsFillArrowLeftCircleFill } from 'react-icons/bs';\nimport styled from 'styled-components';\nimport * as placeholder from '../../../images/person-placeholder.webp';\n\nexport const Card = styled.div`\n  position: relative;\n  display: block;\n  width: 90vw;\n  min-height: 400px;\n  overflow: hidden;\n  padding: 10px 30px;\n\n  background-size: contain, 100% 80%;\n  background-repeat: no-repeat;\n  background-image: linear-gradient(\n      to bottom,\n      rgba(102, 80, 165, 0.5) 0%,\n      rgba(0, 0, 0, 0.6) 40%,\n      rgba(0, 0, 0, 0.95) 60%,\n      rgba(0, 0, 0, 1) 100%\n    ),\n    ${card => {\n      if (!card.bdimage) {\n        return `url(${placeholder.default})`;\n      }\n      return `url(https://image.tmdb.org/t/p/w500${card.bdimage})`;\n    }};\n\n  border-radius: 8px;\n  box-shadow: 0px 8px 12px 0px rgba(0, 0, 0, 0.25);\n\n  transform: scale(1);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  ::after {\n    position: absolute;\n    top: 95%;\n    left: 0;\n    display: inline-block;\n    content: '';\n    width: 100%;\n    height: 5px;\n    background-color: #38bbd8;\n\n    transform: translateX(-100%);\n    transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  :hover,\n  :focus {\n    transform: scale(1.05);\n\n    ::after {\n      transform: translateX(0);\n    }\n  }\n\n  @media (min-width: 480px) {\n    padding: 20px 30px;\n    background-size: contain, 55% 100%;\n    background-image: linear-gradient(\n        to right,\n        rgba(102, 80, 165, 0.5) 0%,\n        rgba(0, 0, 0, 0.6) 40%,\n        rgba(0, 0, 0, 0.95) 50%,\n        rgba(0, 0, 0, 1) 100%\n      ),\n      ${card => {\n        if (!card.bdimage) {\n          return `url(${placeholder.default})`;\n        }\n        return `url(https://image.tmdb.org/t/p/w500${card.bdimage})`;\n      }};\n  }\n\n  @media (min-width: 768px) {\n    padding: 15px 20px;\n    width: 45vw;\n    min-height: 250px;\n  }\n\n  @media (min-width: 1200px) {\n    width: 30vw;\n    min-height: 300px;\n  }\n`;\n\nexport const TextContainer = styled.div`\n  margin-top: 220px;\n\n  font-family: 'Montserrat';\n  font-weight: 500;\n  color: #ffffff;\n\n  @media (min-width: 480px) {\n    width: 50%;\n    margin-top: 0;\n    margin-left: auto;\n  }\n`;\n\nexport const StarName = styled.h3`\n  margin-bottom: 5px;\n  font-weight: 700;\n  font-size: 18px;\n  text-transform: uppercase;\n\n  @media (min-width: 768px) {\n    font-size: 22px;\n  }\n`;\n\nexport const Character = styled.p`\n  margin-bottom: 10px;\n  font-size: 14px;\n  color: rgb(195, 173, 255);\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const BioBtn = styled.button`\n  position: relative;\n  overflow: hidden;\n  display: inline-flex;\n  align-items: center;\n  gap: 10px;\n  margin-top: 15px;\n  padding: 5px 10px 5px 10px;\n  border: 2px solid rgb(195, 173, 255);\n  border-radius: 25px;\n  background-color: transparent;\n\n  color: inherit;\n  font-size: 16px;\n\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    border: 2px solid rgb(102, 80, 165);\n    background-color: rgb(102, 80, 165);\n  }\n`;\n\nexport const ArrowIcon = styled(BsFillArrowLeftCircleFill)`\n  position: relative;\n  z-index: 1;\n  width: 20px;\n  height: 20px;\n  rotate: 180deg;\n\n  transform: translateX(200%);\n  transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  ${BioBtn}:hover &, ${BioBtn}:focus & {\n    transform: translateX(0);\n  }\n\n  @media (min-width: 1200px) {\n    width: 30px;\n    height: 30px;\n  }\n`;\n\nexport const Biography = styled.p`\n  max-height: 200px;\n  overflow: auto;\n  font-size: 14px;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n\n  @media (min-width: 480px) {\n    max-height: 300px;\n    font-size: 16px;\n  }\n\n  @media (min-width: 768px) {\n    max-height: 120px;\n    font-size: 14px;\n  }\n\n  @media (min-width: 1200px) {\n    max-height: 160px;\n    font-size: 16px;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchAPI } from '../../../helpers/fetchAPI';\nimport { ErrorMessage } from '../../ErrorMessage/ErrorMessage';\nimport {\n  Card,\n  TextContainer,\n  StarName,\n  Character,\n  BioBtn,\n  ArrowIcon,\n  Biography,\n} from './CastMember.styled';\n\nexport const CastMember = ({\n  actor: { id, profile_path, name, character },\n}) => {\n  const [biography, setBiography] = useState(null);\n  const [isShown, setIsShown] = useState(false);\n\n  const handleClick = () => {\n    fetchAPI('person', null, id)\n      .then(({ data: { biography } }) => setBiography(biography))\n      .catch(error => console.log(error));\n\n    setIsShown(true);\n  };\n\n  return (\n    <Card bdimage={profile_path}>\n      <TextContainer>\n        <StarName>{name}</StarName>\n        <Character>as {character}</Character>\n        {!isShown && (\n          <BioBtn type=\"button\" onClick={handleClick}>\n            <ArrowIcon />\n            View biography\n          </BioBtn>\n        )}\n\n        {isShown && biography && <Biography>{biography}</Biography>}\n        {isShown && !biography && (\n          <ErrorMessage small text={'Biography is unknown'} />\n        )}\n      </TextContainer>\n    </Card>\n  );\n};\n\nCastMember.propTypes = {\n  actor: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    profile_path: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  padding: 20px;\n  font-size: 22px;\n\n  @media (min-width: 1200px) {\n    text-align: center;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n  padding: 0;\n  text-align: start;\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { fetchAPI } from '../../helpers/fetchAPI';\nimport { CastMember } from './CastMember/CastMember';\nimport { BackLink } from '../MovieInfo/BackLink/BackLink';\nimport { ErrorMessage } from '../ErrorMessage/ErrorMessage';\nimport { Container, List } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/movies/:movieId');\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    fetchAPI('cast', abortController.signal, movieId)\n      .then(({ data: { cast } }) => setCast(cast))\n      .catch(error => console.log(error));\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <Container>\n      <BackLink section text={'Close cast'} backRef={backLinkHref.current} />\n      {cast.length ? (\n        <List>\n          {cast.map(actor => {\n            return <CastMember key={actor.id} actor={actor} />;\n          })}\n        </List>\n      ) : (\n        <ErrorMessage text={'Sorry, we don`t have information about cast'} />\n      )}\n    </Container>\n  );\n};\n\nexport default Cast;\n","import { TbMovieOff } from 'react-icons/tb';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-top: ${props => (props.small === 'true' ? '10px' : '20px')};\n  text-align: center;\n\n  @media (min-width: 1200px) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 30px;\n    padding-top: ${props => (props.small === 'true' ? '10px' : '50px')};\n  }\n`;\n\nexport const MovieIcon = styled(TbMovieOff)`\n  display: ${props => (props.small === 'true' ? 'none' : 'inline-block')};\n  width: 50px;\n  height: 50px;\n\n  @media (min-width: 1200px) {\n    width: 70px;\n    height: 70px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-top: 10px;\n  font-size: ${props => (props.small === 'true' ? '16px' : '22px')};\n\n  @media (min-width: 1200px) {\n    margin-top: 0;\n    font-weight: 600;\n    font-size: ${props => (props.small === 'true' ? '16px' : '32px')};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Container, MovieIcon, Text } from './ErrorMessage.styled';\n\nexport const ErrorMessage = ({ text, small }) => {\n  const isSmall = small ? 'true' : 'false';\n\n  return (\n    <Container small={isSmall}>\n      <MovieIcon small={isSmall} />\n      <Text small={isSmall}>{text}</Text>\n    </Container>\n  );\n};\n\nErrorMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  small: PropTypes.bool,\n};\n","import { Link } from 'react-router-dom';\nimport { BsFillArrowLeftCircleFill } from 'react-icons/bs';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  width: ${props => (props.section === 'true' ? '200px' : '150px')};\n  height: 40px;\n  border-radius: 25px;\n  overflow: hidden;\n`;\n\nexport const BackIcon = styled(BsFillArrowLeftCircleFill)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  width: 40px;\n  height: 40px;\n  color: rgb(102, 80, 165);\n`;\n\nexport const BackHoverText = styled.span`\n  display: none;\n  align-items: center;\n  gap: 20px;\n  width: ${props => (props.section === 'true' ? '200px' : '150px')};\n  height: 40px;\n  padding-left: 5px;\n  background-color: rgb(102, 80, 165);\n  border-radius: 25px;\n  font-size: inherit;\n  color: #ffffff;\n\n  ::before {\n    display: block;\n    content: '';\n    width: 30px;\n    height: 80%;\n    background-color: #ffffff;\n    border-radius: 25px;\n  }\n\n  transform: translateX(-100%);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  ${StyledLink}:hover &, ${StyledLink}:focus & {\n    transform: translateX(0);\n  }\n\n  @media (min-width: 768px) {\n    display: inline-flex;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledLink, BackIcon, BackHoverText } from './BackLink.styled';\n\nexport const BackLink = ({ section, backRef, text }) => {\n  const isSectionElem = section ? 'true' : 'false';\n\n  return (\n    <StyledLink section={isSectionElem} to={backRef}>\n      <BackHoverText section={isSectionElem}>{text}</BackHoverText>\n      <BackIcon section={isSectionElem} />\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  section: PropTypes.bool,\n  backRef: PropTypes.object,\n  text: PropTypes.string.isRequired,\n};\n"],"names":["Card","styled","card","bdimage","placeholder","TextContainer","StarName","Character","BioBtn","ArrowIcon","BsFillArrowLeftCircleFill","Biography","CastMember","actor","id","profile_path","name","character","useState","biography","setBiography","isShown","setIsShown","type","onClick","fetchAPI","then","data","catch","error","console","log","ErrorMessage","small","text","Container","List","cast","setCast","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","abortController","AbortController","signal","abort","BackLink","section","backRef","current","length","map","props","MovieIcon","TbMovieOff","Text","isSmall","StyledLink","Link","BackIcon","BackHoverText","isSectionElem","to"],"sourceRoot":""}