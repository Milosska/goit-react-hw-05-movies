{"version":3,"file":"static/js/556.e3a7cd51.chunk.js","mappings":"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","sources":["components/ButtonUp/ButtonUp.styled.jsx","components/ButtonUp/ButtonUp.jsx","components/MovieInfo/BackLink/BackLink.styled.jsx","components/MovieInfo/BackLink/BackLink.jsx","components/MovieInfo/CompaniesList/CompaniesList.styled.jsx","components/MovieInfo/CompaniesList/CompaniesList.jsx","components/MovieInfo/StatesInfo/StatesInfo.styled.jsx","components/MovieInfo/StatesInfo/StatesInfo.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { BsArrowUpCircleFill } from 'react-icons/bs';\nimport styled from 'styled-components';\n\nexport const Button = styled.button`\n  position: fixed;\n  bottom: 10px;\n  right: 30px;\n  z-index: 10;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 50px;\n  padding: 0;\n  border-radius: 50%;\n  background-color: #ffffff;\n  border: none;\n\n  @media (min-width: 768px) {\n    bottom: 20px;\n    right: 50px;\n    width: 70px;\n    height: 70px;\n  }\n\n  @media (min-width: 1900px) {\n    width: 100px;\n    height: 100px;\n  }\n\n  &.is-hidden {\n    display: none;\n  }\n`;\n\nexport const Icon = styled(BsArrowUpCircleFill)`\n  width: 50px;\n  height: 50px;\n  color: rgb(102, 80, 165);\n\n  @media (min-width: 768px) {\n    width: 70px;\n    height: 70px;\n  }\n\n  @media (min-width: 1900px) {\n    width: 100px;\n    height: 100px;\n  }\n`;\n","import { Icon, Button } from './ButtonUp.styled';\n\nexport const ButtonUp = () => {\n  const handleClick = () => {\n    if (window.pageYOffset > 0) {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  return (\n    <Button type=\"button\" onClick={handleClick}>\n      <Icon />\n    </Button>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { BsFillArrowLeftCircleFill } from 'react-icons/bs';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  width: ${props => (props.section === 'true' ? '200px' : '150px')};\n  height: 40px;\n  border-radius: 25px;\n  overflow: hidden;\n`;\n\nexport const BackIcon = styled(BsFillArrowLeftCircleFill)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  width: 40px;\n  height: 40px;\n  color: rgb(102, 80, 165);\n`;\n\nexport const BackHoverText = styled.span`\n  display: none;\n  align-items: center;\n  gap: 20px;\n  width: ${props => (props.section === 'true' ? '200px' : '150px')};\n  height: 40px;\n  padding-left: 5px;\n  background-color: rgb(102, 80, 165);\n  border-radius: 25px;\n  font-size: inherit;\n  color: #ffffff;\n\n  ::before {\n    display: block;\n    content: '';\n    width: 30px;\n    height: 80%;\n    background-color: #ffffff;\n    border-radius: 25px;\n  }\n\n  transform: translateX(-100%);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  ${StyledLink}:hover &, ${StyledLink}:focus & {\n    transform: translateX(0);\n  }\n\n  @media (min-width: 768px) {\n    display: inline-flex;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledLink, BackIcon, BackHoverText } from './BackLink.styled';\n\nexport const BackLink = ({ section, backRef, text }) => {\n  const isSectionElem = section ? 'true' : 'false';\n\n  return (\n    <StyledLink section={isSectionElem} to={backRef}>\n      <BackHoverText section={isSectionElem}>{text}</BackHoverText>\n      <BackIcon section={isSectionElem} />\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  section: PropTypes.bool,\n  backRef: PropTypes.object,\n  text: PropTypes.string.isRequired,\n};\n","import { AiOutlineStop } from 'react-icons/ai';\nimport { BsFillArrowLeftCircleFill } from 'react-icons/bs';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 10px;\n  width: 500px;\n  max-height: 280px;\n  margin-top: 20px;\n  padding: 10px 20px;\n  border: 2px solid transparent;\n  border-radius: 25px;\n  transition: border 500ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    border: 2px solid #38bbd8;\n  }\n`;\n\nexport const TitleText = styled.p`\n  padding-top: 20px;\n  font-size: 18px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  column-gap: 10px;\n  max-height: 200px;\n  list-style: none;\n  margin: 0;\n  padding: 0 10px;\n`;\n\nexport const ListElem = styled.li`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n\n  :not(:last-child) {\n    margin-bottom: 5px;\n  }\n\n  :not(:first-child) {\n    display: none;\n  }\n`;\n\nexport const LogoContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 60px;\n  height: 60px;\n  border: 2px solid #38bbd8;\n  border-radius: 50%;\n  background-color: #ffffff;\n`;\n\nexport const LogoPlaceholder = styled(AiOutlineStop)`\n  width: 30px;\n  height: 30px;\n  color: #000000;\n`;\n\nexport const CompanyLogo = styled.img`\n  width: 50px;\n  height: 30px;\n`;\n\nexport const CompanyName = styled.p`\n  font-size: 18px;\n`;\n\nexport const ArrowBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  margin: 10px 0 auto auto;\n  width: 40px;\n  height: 40px;\n  background-color: transparent;\n  border: none;\n`;\n\nexport const ArrowIcon = styled(BsFillArrowLeftCircleFill)`\n  width: 40px;\n  height: 40px;\n  transform: rotate(-90deg);\n  color: transparent;\n\n  transition: color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  ${Container}:hover &, ${Container}:focus & {\n    color: #38bbd8;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState, useRef } from 'react';\n\nimport {\n  Container,\n  List,\n  TitleText,\n  ListElem,\n  LogoContainer,\n  CompanyLogo,\n  LogoPlaceholder,\n  CompanyName,\n  ArrowBtn,\n  ArrowIcon,\n} from './CompaniesList.styled';\n\nexport const CompaniesList = ({ companies }) => {\n  const [prodCompanies] = useState(() => {\n    return companies.length > 9 ? companies.slice(0, 8) : companies;\n  });\n  const [isClose, setIsClose] = useState(true);\n  const listRef = useRef();\n  const containerRef = useRef();\n\n  const getLogo = (logo, name) =>\n    logo ? (\n      <CompanyLogo\n        src={`https://image.tmdb.org/t/p/original/${logo}`}\n        alt={name}\n      />\n    ) : (\n      <LogoPlaceholder />\n    );\n\n  const handleClick = e => {\n    let arrowIcon = e.currentTarget.children[0];\n    // Arrow animation\n    arrowIcon.style.transform = isClose ? 'rotate(90deg)' : 'rotate(-90deg)';\n\n    const liElems = listRef.current.children;\n    // List width animation\n    if (liElems.length > 6) {\n      containerRef.current.style.width = isClose ? '1000px' : '500px';\n    } else if (liElems.length > 3) {\n      containerRef.current.style.width = isClose ? '800px' : '500px';\n    }\n\n    // Li animation\n    for (var i = 0; i < liElems.length; i += 1) {\n      if (i > 0) {\n        if (isClose) {\n          liElems[i].style.display = 'flex';\n        } else {\n          liElems[i].style.display = 'none';\n        }\n      }\n    }\n    setIsClose(prev => !prev);\n  };\n\n  return (\n    <>\n      {window.innerWidth > 1199 && (\n        <Container ref={containerRef}>\n          <TitleText>Companies:</TitleText>\n          {prodCompanies.length ? (\n            <List ref={listRef}>\n              {prodCompanies.map(({ logo_path, name, id }) => {\n                return (\n                  <ListElem key={id}>\n                    <LogoContainer>{getLogo(logo_path)}</LogoContainer>\n                    <CompanyName>{name}</CompanyName>\n                  </ListElem>\n                );\n              })}\n            </List>\n          ) : (\n            <TitleText>No info about companies</TitleText>\n          )}\n\n          {companies.length > 1 && (\n            <ArrowBtn type=\"button\" onClick={handleClick}>\n              <ArrowIcon />\n            </ArrowBtn>\n          )}\n        </Container>\n      )}\n    </>\n  );\n};\n\nCompaniesList.propTypes = {\n  companies: PropTypes.arrayOf(PropTypes.object),\n};\n","import {\n  BsFillPeopleFill,\n  BsFillStarFill,\n  BsFillCameraReelsFill,\n} from 'react-icons/bs';\nimport styled from 'styled-components';\n\nexport const StatisticContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 15px;\n\n  @media (min-width: 768px) {\n    justify-content: start;\n  }\n\n  @media (min-width: 1200px) {\n    flex-wrap: nowrap;\n    gap: 25px;\n  }\n`;\n\nexport const StatContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n\n  @media (min-width: 480px) {\n    padding: 5px 0;\n  }\n\n  @media (min-width: 768px) {\n    padding: 10px 0;\n  }\n`;\n\nexport const PopularityIcon = styled(BsFillPeopleFill)`\n  width: 30px;\n  height: 30px;\n\n  @media (min-width: 1200px) {\n    width: 50px;\n    height: 50px;\n  }\n`;\n\nexport const StarIcon = styled(BsFillStarFill)`\n  width: 30px;\n  height: 30px;\n\n  @media (min-width: 1200px) {\n    width: 50px;\n    height: 50px;\n  }\n`;\n\nexport const CameraIcon = styled(BsFillCameraReelsFill)`\n  width: 30px;\n  height: 30px;\n\n  @media (min-width: 1200px) {\n    width: 50px;\n    height: 50px;\n  }\n`;\n\nexport const StatText = styled.p`\n  font-size: 14px;\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const StatData = styled.span`\n  display: block;\n  margin-top: 5px;\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  StatisticContainer,\n  StatText,\n  PopularityIcon,\n  StarIcon,\n  CameraIcon,\n  StatData,\n  StatContainer,\n} from './StatesInfo.styled';\n\nexport const StatesInfo = ({ popularity, vote_average, status }) => {\n  return (\n    <StatisticContainer>\n      <StatContainer>\n        <PopularityIcon />\n        <StatText>\n          Popularity: <StatData>{popularity}</StatData>\n        </StatText>\n      </StatContainer>\n      <StatContainer>\n        <StarIcon />\n        <StatText>\n          Vote average:<StatData>{vote_average}</StatData>\n        </StatText>\n      </StatContainer>\n      <StatContainer>\n        <CameraIcon />\n        <StatText>\n          Status: <StatData>{status}</StatData>\n        </StatText>\n      </StatContainer>\n    </StatisticContainer>\n  );\n};\n\nStatesInfo.propTypes = {\n  popularity: PropTypes.number,\n  vote_average: PropTypes.number,\n  status: PropTypes.string,\n};\n","import { Link } from 'react-router-dom';\nimport { BsFillArrowLeftCircleFill } from 'react-icons/bs';\nimport styled from 'styled-components';\nimport * as placeholder from '../../images/big-movie-placholder-min.jpg';\n\nexport const BgContainer = styled.div`\n  width: 100%;\n  min-height: 500px;\n  padding: 20px 0;\n  font-size: 14px;\n  background-size: contain, 100% 300px;\n  background-position: left top, right top;\n  background-repeat: no-repeat;\n  background-image: linear-gradient(\n      to bottom,\n      rgba(102, 80, 165, 0.5) 0%,\n      rgba(0, 0, 0, 0.4) 50%,\n      rgba(0, 0, 0, 0.95) 55%,\n      rgba(0, 0, 0, 1) 100%\n    ),\n    ${BgContainer => {\n      if (!BgContainer.bdimage) {\n        return `url(${placeholder.default})`;\n      }\n      return `url(https://image.tmdb.org/t/p/original/${BgContainer.bdimage})`;\n    }};\n\n  @media (min-width: 480px) {\n    background-size: contain, 100% 65%;\n  }\n\n  @media (min-width: 768px) {\n    background-size: contain, 85% 100%;\n    padding: 30px 20px;\n    height: 600px;\n    font-size: 16px;\n    background-image: linear-gradient(\n        to left,\n        rgba(102, 80, 165, 0.5) 0%,\n        rgba(0, 0, 0, 0.6) 50%,\n        rgba(0, 0, 0, 0.95) 80%,\n        rgba(0, 0, 0, 1) 100%\n      ),\n      ${BgContainer => {\n        if (!BgContainer.bdimage) {\n          return `url(${placeholder.default})`;\n        }\n        return `url(https://image.tmdb.org/t/p/original/${BgContainer.bdimage})`;\n      }};\n\n    @media (min-width: 1200px) {\n      height: 800px;\n      padding: 30px 30px;\n    }\n  }\n`;\n\nexport const TextContainer = styled.div`\n  width: 100%;\n  padding: 0 20px;\n  color: #ffffff;\n\n  @media (min-width: 768px) {\n    width: 55%;\n    padding: 0;\n    margin-right: auto;\n  }\n\n  @media (min-width: 1200px) {\n    width: 40%;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-top: 100px;\n  font-family: 'Montserrat';\n  font-weight: 700;\n  font-size: 22px;\n  line-height: 26px;\n  text-transform: uppercase;\n\n  @media (min-width: 480px) {\n    font-size: 26px;\n    line-height: 32px;\n  }\n\n  @media (min-width: 768px) {\n    margin-top: 30px;\n  }\n\n  @media (min-width: 1200px) {\n    font-size: 42px;\n    line-height: 46px;\n  }\n`;\n\nexport const Genres = styled.p`\n  margin-top: 5px;\n  font-size: 16px;\n  color: rgb(195, 173, 255);\n\n  @media (min-width: 768px) {\n    margin-top: 10px;\n    font-size: 18px;\n  }\n\n  @media (min-width: 1200px) {\n    font-size: 22px;\n  }\n`;\n\nexport const Description = styled.p`\n  margin: 10px 0;\n  font-size: 14px;\n\n  @media (min-width: 768px) {\n    margin: 20px 0;\n    font-size: 16px;\n  }\n\n  @media (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nexport const LinkThumb = styled.div`\n  text-align: center;\n\n  @media (min-width: 768px) {\n    text-align: left;\n  }\n`;\n\nexport const AddLink = styled(Link)`\n  position: relative;\n  overflow: hidden;\n  display: inline-flex;\n  align-items: center;\n  gap: 10px;\n  margin-top: 15px;\n  padding: 5px 10px 5px 10px;\n  border: 2px solid rgb(195, 173, 255);\n  border-radius: 25px;\n  font-size: 16px;\n  background-color: transparent;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :not(:last-child) {\n    margin-right: 20px;\n  }\n\n  :hover,\n  :focus {\n    border: 2px solid rgb(102, 80, 165);\n    background-color: rgb(102, 80, 165);\n  }\n\n  @media (min-width: 1200px) {\n    margin-top: 30px;\n    /* padding: 5px 20px 5px 10px; */\n    font-size: 22px;\n  }\n`;\n\nexport const ArrowIcon = styled(BsFillArrowLeftCircleFill)`\n  position: relative;\n  z-index: 1;\n  width: 20px;\n  height: 20px;\n  rotate: 180deg;\n\n  transform: translateX(200%);\n  transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  ${AddLink}:hover &, ${AddLink}:focus & {\n    transform: translateX(0);\n  }\n\n  @media (min-width: 1200px) {\n    width: 30px;\n    height: 30px;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { CompaniesList } from './CompaniesList/CompaniesList';\nimport { StatesInfo } from './StatesInfo/StatesInfo';\nimport { BackLink } from './BackLink/BackLink';\nimport {\n  BgContainer,\n  TextContainer,\n  Title,\n  Genres,\n  Description,\n  LinkThumb,\n  AddLink,\n  ArrowIcon,\n} from './MovieInfo.styled';\n\nexport const MovieInfo = ({\n  backRef,\n  movie: {\n    backdrop_path,\n    title,\n    release_date,\n    genres,\n    overview,\n    popularity,\n    vote_average,\n    status,\n    production_companies,\n  },\n}) => {\n  const location = useLocation();\n\n  const parseGenres = genres => {\n    if (!genres) {\n      return 'N/A';\n    }\n\n    let genresArray = [];\n    genres.forEach(genre => genresArray.push(genre.name));\n\n    return genresArray.join(', ');\n  };\n\n  return (\n    <BgContainer bdimage={backdrop_path}>\n      <TextContainer>\n        <BackLink backRef={backRef} text={'Go back'} />\n        <Title>{title}</Title>\n        <Genres>\n          {release_date && <span>{`(${release_date.split('-')[0]}) `}</span>}\n          {parseGenres(genres)}\n        </Genres>\n        <Description>{overview}</Description>\n        <StatesInfo\n          popularity={popularity}\n          vote_average={vote_average}\n          status={status}\n        />\n        <CompaniesList companies={production_companies} />\n        <LinkThumb>\n          <AddLink to={'cast'} state={{ from: location }}>\n            <ArrowIcon />\n            Cast\n          </AddLink>\n          <AddLink to={'reviews'} state={{ from: location }}>\n            <ArrowIcon />\n            Reviews\n          </AddLink>\n          <AddLink to={'trailers'} state={{ from: location }}>\n            <ArrowIcon />\n            Trailers\n          </AddLink>\n        </LinkThumb>\n      </TextContainer>\n    </BgContainer>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    backdrop_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.object),\n    overview: PropTypes.string,\n  }).isRequired,\n};\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useWindowScroll } from 'react-use';\nimport { fetchAPI } from '../helpers/fetchAPI';\nimport { Loader } from '../components/Loader/Loader';\nimport { MovieInfo } from '../components/MovieInfo/MovieInfo';\nimport { ButtonUp } from '../components/ButtonUp/ButtonUp';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const { y } = useWindowScroll();\n\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setIsLoading(true);\n    const abortController = new AbortController();\n    fetchAPI('movie', abortController.signal, movieId)\n      .then(({ data }) => setMovie(data))\n      .catch(error => console.log(error))\n      .finally(() => setIsLoading(false));\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {y > 500 && <ButtonUp />}\n      {movie && <MovieInfo backRef={backLinkHref.current} movie={movie} />}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Button","styled","Icon","BsArrowUpCircleFill","ButtonUp","type","onClick","window","pageYOffset","scrollTo","top","behavior","StyledLink","Link","props","section","BackIcon","BsFillArrowLeftCircleFill","BackHoverText","BackLink","backRef","text","isSectionElem","to","Container","TitleText","List","ListElem","LogoContainer","LogoPlaceholder","AiOutlineStop","CompanyLogo","CompanyName","ArrowBtn","ArrowIcon","CompaniesList","companies","useState","length","slice","prodCompanies","isClose","setIsClose","listRef","useRef","containerRef","getLogo","logo","name","src","alt","innerWidth","ref","map","logo_path","id","e","currentTarget","children","style","transform","liElems","current","width","i","display","prev","StatisticContainer","StatContainer","PopularityIcon","BsFillPeopleFill","StarIcon","BsFillStarFill","CameraIcon","BsFillCameraReelsFill","StatText","StatData","StatesInfo","popularity","vote_average","status","BgContainer","bdimage","placeholder","TextContainer","Title","Genres","Description","LinkThumb","AddLink","MovieInfo","movie","backdrop_path","title","release_date","genres","overview","production_companies","location","useLocation","split","genresArray","forEach","genre","push","join","parseGenres","state","from","setMovie","isLoading","setIsLoading","movieId","useParams","y","useWindowScroll","backLinkHref","useEffect","abortController","AbortController","fetchAPI","signal","then","data","catch","error","console","log","finally","abort","Loader","Suspense","fallback"],"sourceRoot":""}