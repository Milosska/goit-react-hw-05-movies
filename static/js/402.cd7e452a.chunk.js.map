{"version":3,"file":"static/js/402.cd7e452a.chunk.js","mappings":"8MAGaA,EAAYC,EAAAA,GAAAA,IAAH,8NACL,SAAAC,GAAK,MAAqB,SAAhBA,EAAMC,MAAmB,OAAS,MAAvC,IAQH,SAAAD,GAAK,MAAqB,SAAhBA,EAAMC,MAAmB,OAAS,MAAvC,IAIXC,GAAYH,EAAAA,EAAAA,IAAOI,EAAAA,IAAPJ,CAAH,sJACT,SAAAC,GAAK,MAAqB,SAAhBA,EAAMC,MAAmB,OAAS,cAAvC,IAULG,EAAOL,EAAAA,GAAAA,EAAH,uKAEF,SAAAC,GAAK,MAAqB,SAAhBA,EAAMC,MAAmB,OAAS,MAAvC,IAKH,SAAAD,GAAK,MAAqB,SAAhBA,EAAMC,MAAmB,OAAS,MAAvC,I,SC/BTI,EAAe,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KACvBC,EADyC,EAAZN,MACX,OAAS,QAEjC,OACE,UAACH,EAAD,CAAWG,MAAOM,EAAlB,WACE,SAACL,EAAD,CAAWD,MAAOM,KAClB,SAACH,EAAD,CAAMH,MAAOM,EAAb,SAAuBD,MAG5B,C,wGCRYE,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,6KAIZ,SAAAC,GAAK,MAAuB,SAAlBA,EAAMU,QAAqB,QAAU,OAA1C,IAMHC,GAAWZ,EAAAA,EAAAA,IAAOa,EAAAA,IAAPb,CAAH,mJAURc,EAAgBd,EAAAA,GAAAA,KAAH,+mBAIf,SAAAC,GAAK,MAAuB,SAAlBA,EAAMU,QAAqB,QAAU,OAA1C,GAoBZF,EAAuBA,G,SC7CdM,EAAW,SAAC,GAAgC,IAA9BJ,EAA6B,EAA7BA,QAASK,EAAoB,EAApBA,QAAST,EAAW,EAAXA,KACrCU,EAAgBN,EAAU,OAAS,QAEzC,OACE,UAACF,EAAD,CAAYE,QAASM,EAAeC,GAAIF,EAAxC,WACE,SAACF,EAAD,CAAeH,QAASM,EAAxB,SAAwCV,KACxC,SAACK,EAAD,CAAUD,QAASM,MAGxB,C,uKCTYlB,EAAYC,EAAAA,GAAAA,IAAH,4JAUTmB,EAAcnB,EAAAA,GAAAA,IAAH,ySAoBXoB,GAASpB,EAAAA,EAAAA,IAAOqB,EAAAA,EAAPrB,CAAH,sE,SCuBnB,EAhDiB,WAAO,IAAD,IACrB,GAAgCsB,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAsBF,EAAAA,EAAAA,YAAtB,eAAOG,EAAP,KAAYC,EAAZ,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,oBAmBpD,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBAK5B,OAJAC,EAAAA,EAAAA,GAAS,WAAYF,EAAgBG,OAAQZ,GAC1Ca,MAAK,gBAAWC,EAAX,EAAGC,KAAQD,QAAX,OAA2BjB,EAAYiB,EAAvC,IACLE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAEP,WACLR,EAAgBW,OACjB,CACF,GAAE,CAACpB,KAEJQ,EAAAA,EAAAA,YAAU,WACJZ,EAASyB,QACXtB,EAAOH,EAAS,GAAG0B,IAEtB,GAAE,CAAC1B,KAGF,UAACxB,EAAD,YACE,SAACgB,EAAA,EAAD,CACEJ,SAAO,EACPJ,KAAM,iBACNS,QAASe,EAAamB,UAGvB3B,EAASyB,QACR,SAAC7B,EAAD,WACE,SAACC,EAAD,CACEK,IAAG,0CAAqCA,GACxC0B,UAAU,EACVC,MAAM,OACNC,OAAO,YAIX,SAAC/C,EAAA,EAAD,CAAcC,KAAM,sCAI3B,C","sources":["components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/MovieInfo/BackLink/BackLink.styled.jsx","components/MovieInfo/BackLink/BackLink.jsx","components/Trailers/Trailers.styled.jsx","components/Trailers/Trailers.jsx"],"sourcesContent":["import { TbMovieOff } from 'react-icons/tb';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-top: ${props => (props.small === 'true' ? '10px' : '20px')};\n  text-align: center;\n\n  @media (min-width: 1200px) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 30px;\n    padding-top: ${props => (props.small === 'true' ? '10px' : '50px')};\n  }\n`;\n\nexport const MovieIcon = styled(TbMovieOff)`\n  display: ${props => (props.small === 'true' ? 'none' : 'inline-block')};\n  width: 50px;\n  height: 50px;\n\n  @media (min-width: 1200px) {\n    width: 70px;\n    height: 70px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-top: 10px;\n  font-size: ${props => (props.small === 'true' ? '16px' : '22px')};\n\n  @media (min-width: 1200px) {\n    margin-top: 0;\n    font-weight: 600;\n    font-size: ${props => (props.small === 'true' ? '16px' : '32px')};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Container, MovieIcon, Text } from './ErrorMessage.styled';\n\nexport const ErrorMessage = ({ text, small }) => {\n  const isSmall = small ? 'true' : 'false';\n\n  return (\n    <Container small={isSmall}>\n      <MovieIcon small={isSmall} />\n      <Text small={isSmall}>{text}</Text>\n    </Container>\n  );\n};\n\nErrorMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  small: PropTypes.bool,\n};\n","import { Link } from 'react-router-dom';\nimport { BsFillArrowLeftCircleFill } from 'react-icons/bs';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  width: ${props => (props.section === 'true' ? '200px' : '150px')};\n  height: 40px;\n  border-radius: 25px;\n  overflow: hidden;\n`;\n\nexport const BackIcon = styled(BsFillArrowLeftCircleFill)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  width: 40px;\n  height: 40px;\n  color: rgb(102, 80, 165);\n`;\n\nexport const BackHoverText = styled.span`\n  display: none;\n  align-items: center;\n  gap: 20px;\n  width: ${props => (props.section === 'true' ? '200px' : '150px')};\n  height: 40px;\n  padding-left: 5px;\n  background-color: rgb(102, 80, 165);\n  border-radius: 25px;\n  font-size: inherit;\n  color: #ffffff;\n\n  ::before {\n    display: block;\n    content: '';\n    width: 30px;\n    height: 80%;\n    background-color: #ffffff;\n    border-radius: 25px;\n  }\n\n  transform: translateX(-100%);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  ${StyledLink}:hover &, ${StyledLink}:focus & {\n    transform: translateX(0);\n  }\n\n  @media (min-width: 768px) {\n    display: inline-flex;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledLink, BackIcon, BackHoverText } from './BackLink.styled';\n\nexport const BackLink = ({ section, backRef, text }) => {\n  const isSectionElem = section ? 'true' : 'false';\n\n  return (\n    <StyledLink section={isSectionElem} to={backRef}>\n      <BackHoverText section={isSectionElem}>{text}</BackHoverText>\n      <BackIcon section={isSectionElem} />\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  section: PropTypes.bool,\n  backRef: PropTypes.object,\n  text: PropTypes.string.isRequired,\n};\n","import ReactPlayer from 'react-player';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  padding: 20px 0 40px;\n  font-size: 22px;\n\n  @media (min-width: 1200px) {\n    text-align: center;\n  }\n`;\n\nexport const PlayerThumb = styled.div`\n  position: relative;\n  margin: 20px auto 0;\n  width: 100vw;\n  height: 300px;\n\n  @media (min-width: 480px) {\n    height: 400px;\n  }\n\n  @media (min-width: 768px) {\n    width: 80vw;\n  }\n\n  @media (min-width: 1200px) {\n    width: 80vw;\n    height: 600px;\n  }\n`;\n\nexport const Player = styled(ReactPlayer)`\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { fetchAPI } from '../../helpers/fetchAPI';\nimport { BackLink } from '../MovieInfo/BackLink/BackLink';\nimport { ErrorMessage } from '../ErrorMessage/ErrorMessage';\n\nimport { Container, PlayerThumb, Player } from './Trailers.styled';\n\nconst Trailers = () => {\n  const [trailers, setTrailers] = useState([]);\n  const [url, setUrl] = useState();\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/movies/:movieId');\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    fetchAPI('trailers', abortController.signal, movieId)\n      .then(({ data: { results } }) => setTrailers(results))\n      .catch(error => console.log(error));\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  useEffect(() => {\n    if (trailers.length) {\n      setUrl(trailers[0].key);\n    }\n  }, [trailers]);\n\n  return (\n    <Container>\n      <BackLink\n        section\n        text={'Close trailers'}\n        backRef={backLinkHref.current}\n      />\n\n      {trailers.length ? (\n        <PlayerThumb>\n          <Player\n            url={`https://www.youtube.com/watch?v=${url}`}\n            controls={true}\n            width=\"100%\"\n            height=\"100%\"\n          />\n        </PlayerThumb>\n      ) : (\n        <ErrorMessage text={'Sorry, trailer is not avaliable'} />\n      )}\n    </Container>\n  );\n};\n\nexport default Trailers;\n"],"names":["Container","styled","props","small","MovieIcon","TbMovieOff","Text","ErrorMessage","text","isSmall","StyledLink","Link","section","BackIcon","BsFillArrowLeftCircleFill","BackHoverText","BackLink","backRef","isSectionElem","to","PlayerThumb","Player","ReactPlayer","useState","trailers","setTrailers","url","setUrl","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","abortController","AbortController","fetchAPI","signal","then","results","data","catch","error","console","log","abort","length","key","current","controls","width","height"],"sourceRoot":""}