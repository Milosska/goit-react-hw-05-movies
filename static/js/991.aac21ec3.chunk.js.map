{"version":3,"file":"static/js/991.aac21ec3.chunk.js","mappings":"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","sources":["components/ButtonUp/ButtonUp.styled.jsx","components/ButtonUp/ButtonUp.jsx","components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieCard/MovieCard.styled.jsx","components/MovieList/MovieCard/MovieCard.jsx","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import { BsArrowUpCircleFill } from 'react-icons/bs';\nimport styled from 'styled-components';\n\nexport const Button = styled.button`\n  position: fixed;\n  bottom: 10px;\n  right: 30px;\n  z-index: 10;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 50px;\n  padding: 0;\n  border-radius: 50%;\n  background-color: #ffffff;\n  border: none;\n\n  @media (min-width: 768px) {\n    bottom: 20px;\n    right: 50px;\n    width: 70px;\n    height: 70px;\n  }\n\n  @media (min-width: 1900px) {\n    width: 100px;\n    height: 100px;\n  }\n\n  &.is-hidden {\n    display: none;\n  }\n`;\n\nexport const Icon = styled(BsArrowUpCircleFill)`\n  width: 50px;\n  height: 50px;\n  color: rgb(102, 80, 165);\n\n  @media (min-width: 768px) {\n    width: 70px;\n    height: 70px;\n  }\n\n  @media (min-width: 1900px) {\n    width: 100px;\n    height: 100px;\n  }\n`;\n","import { Icon, Button } from './ButtonUp.styled';\n\nexport const ButtonUp = () => {\n  const handleClick = () => {\n    if (window.pageYOffset > 0) {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  return (\n    <Button type=\"button\" onClick={handleClick}>\n      <Icon />\n    </Button>\n  );\n};\n","import { TbMovieOff } from 'react-icons/tb';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-top: ${props => (props.small === 'true' ? '10px' : '20px')};\n  text-align: center;\n\n  @media (min-width: 1200px) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 30px;\n    padding-top: ${props => (props.small === 'true' ? '10px' : '50px')};\n  }\n`;\n\nexport const MovieIcon = styled(TbMovieOff)`\n  display: ${props => (props.small === 'true' ? 'none' : 'inline-block')};\n  width: 50px;\n  height: 50px;\n\n  @media (min-width: 1200px) {\n    width: 70px;\n    height: 70px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-top: 10px;\n  font-size: ${props => (props.small === 'true' ? '16px' : '22px')};\n\n  @media (min-width: 1200px) {\n    margin-top: 0;\n    font-weight: 600;\n    font-size: ${props => (props.small === 'true' ? '16px' : '32px')};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Container, MovieIcon, Text } from './ErrorMessage.styled';\n\nexport const ErrorMessage = ({ text, small }) => {\n  const isSmall = small ? 'true' : 'false';\n\n  return (\n    <Container small={isSmall}>\n      <MovieIcon small={isSmall} />\n      <Text small={isSmall}>{text}</Text>\n    </Container>\n  );\n};\n\nErrorMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  small: PropTypes.bool,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n  padding: 0;\n  list-style: none;\n\n  @media (min-width: 1200px) {\n    gap: 50px;\n  }\n`;\n\nexport const ObserverDiv = styled.div`\n  position: absolute;\n  bottom: 80px;\n  z-index: -1;\n  width: 95%;\n  height: 350px;\n\n  @media (min-width: 768px) {\n    bottom: 60px;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport * as placeholder from '../../../images/movie-placeholder-min.jpg';\n\nexport const Card = styled(NavLink)`\n  position: relative;\n  display: block;\n  width: 90vw;\n  max-height: 400px;\n  overflow: hidden;\n  padding: 10px 30px;\n\n  background-size: contain, 100% 60%;\n  background-repeat: no-repeat;\n  background-image: linear-gradient(\n      to bottom,\n      rgba(102, 80, 165, 0.5) 0%,\n      rgba(0, 0, 0, 0.6) 20%,\n      rgba(0, 0, 0, 0.95) 60%,\n      rgba(0, 0, 0, 1) 100%\n    ),\n    ${card => {\n      if (!card.bdimage) {\n        return `url(${placeholder.default})`;\n      }\n      return `url(https://image.tmdb.org/t/p/w500${card.bdimage})`;\n    }};\n\n  border-radius: 8px;\n  box-shadow: 0px 8px 12px 0px rgba(0, 0, 0, 0.25);\n\n  transform: scale(1);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  ::after {\n    position: absolute;\n    top: 95%;\n    left: 0;\n    display: inline-block;\n    content: '';\n    width: 100%;\n    height: 5px;\n    background-color: #38bbd8;\n\n    transform: translateX(-100%);\n    transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  :hover,\n  :focus {\n    transform: scale(1.05);\n\n    ::after {\n      transform: translateX(0);\n    }\n  }\n\n  @media (min-width: 480px) {\n    padding: 20px 30px;\n\n    background-size: contain, 100% 100%;\n  }\n\n  @media (min-width: 768px) {\n    width: 650px;\n    height: 300px;\n    padding: 20px 30px;\n\n    background-size: contain, 80% 100%;\n    background-image: linear-gradient(\n        to right,\n        rgba(102, 80, 165, 0.5) 0%,\n        rgba(0, 0, 0, 0.6) 50%,\n        rgba(0, 0, 0, 0.95) 80%,\n        rgba(0, 0, 0, 1) 100%\n      ),\n      ${card => {\n        if (!card.bdimage) {\n          return `url(${placeholder.default})`;\n        }\n        return `url(https://image.tmdb.org/t/p/w500${card.bdimage})`;\n      }};\n  }\n\n  @media (min-width: 1200px) {\n    width: 40vw;\n    min-height: 300px;\n  }\n\n  @media (min-width: 1900px) {\n    width: 30vw;\n    min-height: 300px;\n  }\n`;\n\nexport const TextContainer = styled.div`\n  margin-top: 100px;\n\n  font-family: 'Montserrat';\n  font-weight: 500;\n  color: #ffffff;\n\n  @media (min-width: 768px) {\n    width: 50%;\n    margin-top: 0;\n    margin-left: auto;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 5px;\n  font-weight: 700;\n  font-size: 18px;\n  text-transform: uppercase;\n\n  @media (min-width: 768px) {\n    font-size: 22px;\n  }\n`;\n\nexport const Genres = styled.p`\n  margin-bottom: 10px;\n  font-size: 14px;\n  color: rgb(195, 173, 255);\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const Description = styled.p`\n  max-height: 170px;\n  overflow: auto;\n  font-size: 14px;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { forParseGenres } from '../../../helpers/fetchAPI';\nimport {\n  Card,\n  TextContainer,\n  Title,\n  Genres,\n  Description,\n} from './MovieCard.styled';\n\nexport const MovieCard = ({\n  genres,\n  movie: { id, title, overview, genre_ids, release_date, backdrop_path },\n}) => {\n  const location = useLocation();\n  return (\n    <Card\n      to={`/movies/${id}`}\n      state={{ from: location }}\n      bdimage={backdrop_path}\n    >\n      <TextContainer>\n        <Title>{title}</Title>\n        <Genres>\n          {release_date && <span>{`(${release_date.split('-')[0]})`}</span>}\n          {forParseGenres(genres, genre_ids)}\n        </Genres>\n        <Description>{overview}</Description>\n      </TextContainer>\n    </Card>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string,\n    genre_ids: PropTypes.arrayOf(PropTypes.number),\n    release_date: PropTypes.string,\n    backdrop_path: PropTypes.string,\n  }).isRequired,\n  genres: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\n// https://codepen.io/ryanparag/pen/oWrLPr?editors=1100\n","import { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { List, ObserverDiv } from './MovieList.styled';\nimport { MovieCard } from './MovieCard/MovieCard';\n\nexport const MovieList = ({ movies, genres, setPage }) => {\n  const observerRef = useRef();\n\n  useEffect(() => {\n    // Endless scroll\n\n    const observerElem = observerRef.current;\n\n    const observerOptions = {\n      root: null,\n      rootMargin: '0px',\n      threshold: 0.5,\n    };\n\n    let observer = new IntersectionObserver(handleScroll, observerOptions);\n\n    if (observerElem) {\n      observer.observe(observerElem);\n    }\n\n    function handleScroll(entries) {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          setPage(prevState => prevState + 1);\n          return;\n        }\n      });\n\n      window.scrollBy(0, -100);\n    }\n\n    return () => {\n      observer.unobserve(observerElem);\n    };\n  }, [setPage]);\n\n  return (\n    <>\n      <List>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <MovieCard movie={movie} genres={genres} />\n            </li>\n          );\n        })}\n      </List>\n      <ObserverDiv ref={observerRef}></ObserverDiv>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setPage: PropTypes.func.isRequired,\n};\n","import { FiSearch } from 'react-icons/fi';\nimport styled from 'styled-components';\n\nexport const Form = styled.form`\n  position: relative;\n  padding: 20px 0;\n  text-align: center;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 25px;\n  left: calc(50% - 135px);\n  padding: 0 5px;\n  background-color: transparent;\n  cursor: pointer;\n  border: none;\n\n  @media (min-width: 480px) {\n    left: calc(50% - 195px);\n  }\n\n  @media (min-width: 1200px) {\n    left: calc(50% - 245px);\n  }\n`;\n\nexport const Icon = styled(FiSearch)`\n  width: 30px;\n  height: 30px;\n  color: rgba(0, 0, 0, 0.6);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  ${Button}:hover &, ${Button}:focus & {\n    color: #38bbd8;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 280px;\n  padding: 10px 15px 10px 50px;\n  border: 3px solid rgba(102, 80, 165, 0.5);\n  border-radius: 20px;\n\n  :focus {\n    outline-color: rgba(0, 0, 0, 0.6);\n  }\n\n  @media (min-width: 480px) {\n    width: 400px;\n    padding: 10px 15px 10px 50px;\n  }\n\n  @media (min-width: 1200px) {\n    width: 500px;\n    padding: 10px 15px 10px 50px;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Icon, Button } from './SearchBar.styled';\n\nexport const SearchBar = ({ handleSubmit, setSearchParams }) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleSearchState = e => {\n    const currentQuery = e.target.value.trim();\n    setSearchValue(currentQuery);\n    setSearchParams(currentQuery !== '' ? { query: currentQuery } : {});\n  };\n  return (\n    <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <Button type=\"submit\">\n        <Icon />\n      </Button>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        value={searchValue}\n        placeholder=\"Find your movie\"\n        onChange={handleSearchState}\n      />\n    </Form>\n  );\n};\n\nSearchBar.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  setSearchParams: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useWindowScroll } from 'react-use';\nimport { fetchAPI } from '../helpers/fetchAPI';\nimport { SearchBar } from '../components/SearchBar/SearchBar';\nimport { MovieList } from '../components/MovieList/MovieList';\nimport { Loader } from '../components/Loader/Loader';\nimport { ButtonUp } from '../components/ButtonUp/ButtonUp';\nimport { ErrorMessage } from '../components/ErrorMessage/ErrorMessage';\n\nconst Movies = ({ genres }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(() => searchParams.get('query') || '');\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setError] = useState(false);\n  const { y } = useWindowScroll();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    setIsLoading(true);\n    const abortController = new AbortController();\n    fetchAPI('query', abortController.signal, page, query)\n      .then(({ data: { results } }) => {\n        if (!results.length) {\n          setError(true);\n          return;\n        }\n\n        page === 1\n          ? setMovies([...results])\n          : setMovies(prevState => [...prevState, ...results]);\n      })\n      .catch(error => console.log(error))\n      .finally(() => setIsLoading(false));\n    return () => {\n      abortController.abort();\n    };\n  }, [query, page]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setQuery(e.target.query.value.trim());\n    e.target.query.value = '';\n    setPage(1);\n    setError(false);\n  };\n  return (\n    <>\n      {isLoading && <Loader />}\n      <SearchBar\n        handleSubmit={handleSubmit}\n        setSearchParams={setSearchParams}\n      />\n      {movies && !isError && (\n        <MovieList movies={movies} genres={genres} setPage={setPage} />\n      )}\n      {y > 500 && <ButtonUp />}\n      {isError && (\n        <ErrorMessage\n          text={'Oops, something went wrong. Please try another request'}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Button","styled","Icon","BsArrowUpCircleFill","ButtonUp","type","onClick","window","pageYOffset","scrollTo","top","behavior","Container","props","small","MovieIcon","TbMovieOff","Text","ErrorMessage","text","isSmall","List","ObserverDiv","Card","NavLink","card","bdimage","placeholder","TextContainer","Title","Genres","Description","MovieCard","genres","movie","id","title","overview","genre_ids","release_date","backdrop_path","location","useLocation","to","state","from","split","forParseGenres","MovieList","movies","setPage","observerRef","useRef","useEffect","observerElem","current","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","prevState","scrollBy","root","rootMargin","threshold","observe","unobserve","map","ref","Form","FiSearch","Input","SearchBar","handleSubmit","setSearchParams","useState","searchValue","setSearchValue","autoComplete","onSubmit","name","value","onChange","e","currentQuery","target","trim","query","useSearchParams","searchParams","get","setQuery","setMovies","page","isLoading","setIsLoading","isError","setError","y","useWindowScroll","abortController","AbortController","fetchAPI","signal","then","results","data","length","catch","error","console","log","finally","abort","Loader","preventDefault"],"sourceRoot":""}